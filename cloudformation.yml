AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  # https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line
  # CodePipeline needs just the repo scope permissions.
  GitHubOAuthToken:
    Type: String

  JasyptEncryptorPassword:
    Type: String

  ApplicationStackName:
    Type: String

Resources:
  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: "CFPipeline"
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactsBucket
      RoleArn: !GetAtt [PipelineRole, Arn]
      Stages:
        - Name: "GitHub-Checkout"
          Actions:
            - Name: GitHubCheckout
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: maks-tychyna
                Repo: spring-boot-aws
                Branch: master
                OAuthToken: !Ref GitHubOAuthToken
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: GitHubSource
              RunOrder: 1
        - Name: "Deploy-Stack"
          Actions:
            - Name: CreateStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: GitHubSource
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Ref ApplicationStackName
                TemplatePath: "GitHubSource::codepipeline.yml"
                ParameterOverrides: !Sub |
                  {
                    "JasyptEncryptorPassword" : "${JasyptEncryptorPassword}"
                  }
              RunOrder: 2

  GithubWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubOAuthToken
      RegisterWithThirdParty: true
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref Pipeline
      TargetAction: GitHubCheckout
      TargetPipelineVersion: !GetAtt [Pipeline, Version]

  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: ['sts:AssumeRole']
            Effect: Allow
            Principal:
              Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'ec2:*'
                Effect: Allow
                Resource: '*'

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: ['sts:AssumeRole']
            Effect: Allow
            Principal:
              Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 's3:*'
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:ExecuteChangeSet'
                  - 'cloudformation:DeleteChangeSet'
                  - 'cloudformation:DescribeChangeSet'
                  - 'cloudformation:SetStackPolicy'
                  - 'iam:PassRole'
                  - 'sns:Publish'
                Effect: Allow
                Resource: '*'



